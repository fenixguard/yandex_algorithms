"""
ID успешной посылки: 64582156
-------------------------------------------------------------------------------
Задача:
На Алгосах устроили турнир по настольному теннису. Гоша выиграл n партий,
получив при этом некоторое количество очков за каждую из них. Гоше стало
интересно, можно ли разбить все заработанные им во время турнира очки на две
части так, чтобы сумма в них была одинаковой.
-------------------------------------------------------------------------------
Алгоритм:
Алгоритм решения данной задачи сводится к двум подзадачам. Первая - проверяем
сумму очков, если она нечетная, то разбиение невозможно. Вторая - ищем после-
довательность, которая даст в сумме m / 2, где m - общая сумма всех очков.
Если такая последовательность есть, значит задача имеет решение.
В итоге используем динамическое программирвоание и последовательно перебираем
все пары, используем предыдущие значения для рассчитаных пар.
-------------------------------------------------------------------------------
Сложность:
Временная сложность - O(n * m / 2), где n - количество партий, m - общая сумма
очков.
Пространственная сложность - O(m / 2), где m - общая сумма очков.
-------------------------------------------------------------------------------
Данные посылки:
1.065s 4.23Mb
-------------------------------------------------------------------------------
"""

from typing import List, Tuple


def solution(n: int, sequence: List[int]) -> bool:
    total = sum(sequence)

    if n == 0:
        return True
    if total % 2 != 0:
        return False
    half_summary = total // 2

    dp = [False] * (half_summary + 1)

    for i in range(n):
        for j in range(half_summary, sequence[i] - 1, -1):
            if dp[j - sequence[i]] or (sequence[i] == j):
                dp[j] = True

    return dp[half_summary]


def input_data() -> Tuple[int, List[int]]:
    n = int(input())
    sequence = list(map(int, input().strip().split()))
    return n, sequence


if __name__ == '__main__':
    print(solution(*input_data()))
